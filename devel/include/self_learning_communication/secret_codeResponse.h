// Generated by gencpp from file self_learning_communication/secret_codeResponse.msg
// DO NOT EDIT!


#ifndef SELF_LEARNING_COMMUNICATION_MESSAGE_SECRET_CODERESPONSE_H
#define SELF_LEARNING_COMMUNICATION_MESSAGE_SECRET_CODERESPONSE_H


#include <string>
#include <vector>
#include <map>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>

#include <std_msgs/String.h>

namespace self_learning_communication
{
template <class ContainerAllocator>
struct secret_codeResponse_
{
  typedef secret_codeResponse_<ContainerAllocator> Type;

  secret_codeResponse_()
    : secret_code_next()  {
    }
  secret_codeResponse_(const ContainerAllocator& _alloc)
    : secret_code_next(_alloc)  {
  (void)_alloc;
    }



   typedef  ::std_msgs::String_<ContainerAllocator>  _secret_code_next_type;
  _secret_code_next_type secret_code_next;





  typedef boost::shared_ptr< ::self_learning_communication::secret_codeResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::self_learning_communication::secret_codeResponse_<ContainerAllocator> const> ConstPtr;

}; // struct secret_codeResponse_

typedef ::self_learning_communication::secret_codeResponse_<std::allocator<void> > secret_codeResponse;

typedef boost::shared_ptr< ::self_learning_communication::secret_codeResponse > secret_codeResponsePtr;
typedef boost::shared_ptr< ::self_learning_communication::secret_codeResponse const> secret_codeResponseConstPtr;

// constants requiring out of line definition



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::self_learning_communication::secret_codeResponse_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::self_learning_communication::secret_codeResponse_<ContainerAllocator> >::stream(s, "", v);
return s;
}

} // namespace self_learning_communication

namespace ros
{
namespace message_traits
{



// BOOLTRAITS {'IsFixedSize': False, 'IsMessage': True, 'HasHeader': False}
// {'std_msgs': ['/opt/ros/kinetic/share/std_msgs/cmake/../msg'], 'self_learning_communication': ['/home/xiaoc/xiaoc/code/ros_practice/src/self_learning_communication/msg', '/home/xiaoc/xiaoc/code/ros_practice/devel/share/self_learning_communication/msg'], 'actionlib_msgs': ['/opt/ros/kinetic/share/actionlib_msgs/cmake/../msg'], 'geometry_msgs': ['/opt/ros/kinetic/share/geometry_msgs/cmake/../msg']}

// !!!!!!!!!!! ['__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_parsed_fields', 'constants', 'fields', 'full_name', 'has_header', 'header_present', 'names', 'package', 'parsed_fields', 'short_name', 'text', 'types']




template <class ContainerAllocator>
struct IsFixedSize< ::self_learning_communication::secret_codeResponse_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::self_learning_communication::secret_codeResponse_<ContainerAllocator> const>
  : FalseType
  { };

template <class ContainerAllocator>
struct IsMessage< ::self_learning_communication::secret_codeResponse_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::self_learning_communication::secret_codeResponse_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::self_learning_communication::secret_codeResponse_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::self_learning_communication::secret_codeResponse_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::self_learning_communication::secret_codeResponse_<ContainerAllocator> >
{
  static const char* value()
  {
    return "b35be3a85ffc9ac17a62916db1229bb1";
  }

  static const char* value(const ::self_learning_communication::secret_codeResponse_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0xb35be3a85ffc9ac1ULL;
  static const uint64_t static_value2 = 0x7a62916db1229bb1ULL;
};

template<class ContainerAllocator>
struct DataType< ::self_learning_communication::secret_codeResponse_<ContainerAllocator> >
{
  static const char* value()
  {
    return "self_learning_communication/secret_codeResponse";
  }

  static const char* value(const ::self_learning_communication::secret_codeResponse_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::self_learning_communication::secret_codeResponse_<ContainerAllocator> >
{
  static const char* value()
  {
    return "std_msgs/String secret_code_next\n\
\n\
================================================================================\n\
MSG: std_msgs/String\n\
string data\n\
";
  }

  static const char* value(const ::self_learning_communication::secret_codeResponse_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::self_learning_communication::secret_codeResponse_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.secret_code_next);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER
  }; // struct secret_codeResponse_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::self_learning_communication::secret_codeResponse_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::self_learning_communication::secret_codeResponse_<ContainerAllocator>& v)
  {
    s << indent << "secret_code_next: ";
    s << std::endl;
    Printer< ::std_msgs::String_<ContainerAllocator> >::stream(s, indent + "  ", v.secret_code_next);
  }
};

} // namespace message_operations
} // namespace ros

#endif // SELF_LEARNING_COMMUNICATION_MESSAGE_SECRET_CODERESPONSE_H
